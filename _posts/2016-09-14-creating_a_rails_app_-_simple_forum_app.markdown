---
layout: post
title:  "Creating a Rails app - Simple forum app"
date:   2016-09-14 05:50:16 +0000
---


     When I started this project it seemed like everything I had been learning about the rails framework just left my mind. I remembered that I had a ton of useful tools at my disposal but none of them came to mind immediately. It was a bit overwhelming. So I sat down and started planning out what I wanted my site to be. I decided on a simple conversation app that works like a very basic version of reddit. From there I started thinking about what I wanted it to have. I decided on having a user be able to see the conversations that they created, give them the ability to edit the title or delete the thread altogether. They would also be able to view an index of all the conversations and click on one to view the thread. 

     I chose to start writing code by creating the user model and functionality for creating them and logging in/signing up. I knew I wanted to use the Devise gem but I realized that I didn't recall how to set it up perfectly. I read all the documentation on it and found a few resources online that helped me refresh and set up my user system. I really enjoyed learning more about this gem and diving into it because it is such a useful tool. 
		 
		 The next thing I decided was that messages would be a nested resource inside of the conversations. Each message would belong to a user and a conversation. The conversations would have many users through messages and users would have many conversations through messages. The message form gave me a bit of trouble. Using the build method in the controller was something I had to re-read and brush up on. When I added validation for the message form, that there had to be something typed in the box, I ran into the problem of the submit button being frozen until a page refresh if a blank message was attempted. In the end I removed the button so that the enter key was the only thing used to submit a new message. 
		 
		 Eventually it was time for my project to be more finely tuned. I took some time to add css styling, which is not fancy or very good, to add basic structure to the views. I put everything into boxes and centered it nicely on the page. I also made a box on the conversation show page to keep all messages in a thread in a box with a set height and width. This was the only part I added a little bit of javascript too, and it wasn't added properly. I inserted it into the part I needed it at in a script tag instead of following the asset pipeline I learned about after. This little clip of js was added so that the message box scroll bar, if there was one, would stay at the bottom when a new message was added.
		 
		 Next came the testing. I asked a friend over to help me test it and see what it was like with a couple users on and to see if everything flowed smoothly. It wasn't until this point that I thought about extra validations and styling to make it a good looking project. These were things like adding a character limit to each message so that an individual message wouldn't be able to break the conversation or lure trolls. Another issue I came across was a message running outside of a div that held it. These were things that didn't cross my mind until actually playing around with the final version. The only major thing left to correct is displaying messages that other users post when they post it and making it so that the current user doesn't have to refresh to see. This will be upgraded in the next sections project which will be upgrading this project.
